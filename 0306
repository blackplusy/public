多表查询
select 列 from 表1，表2 where 表1.列=表2.列;
select 列 from 表1 inner join 表2 on 表1.列=表2.列;

子查询
一条SQL语句执行依赖于另外一条SQL语句执行结果

分组查询
select 列 from 表 where 条件
	group by 分组条件
		having 分组后过滤条件

排序查询
顺序：从小到大
	order by 列
	order by 列 asc

倒序：从大到小
	order by 列 desc
select 列 from 表 where 条件
	group by 分组条件
		having 分组后过滤条件
			order by 排序条件;

例子：查询city表中所有数据，按照country_id顺序排列
select * from city order by country_id ;

例子：查询city表中所有数据，按照city_id逆序排列
select * from city order by city_id desc;

分页查询
limit 
查询city表中前10条数据
select * from city limit 10;
查询city表中10-15条数据
select * from city limit 10,5;


--1.jpg
a.select  s.class,count(name) from stinfo s,grade g
where s.id=g.id
and math<60
group by s.class;

b.
select s.name   from stinfo s,grade g
where s.id=g.id
and  g.math>90
order by s.class desc;

--a.png
select avg(年龄) from 作者;

select z.作者姓名,s.图书名,s.出版社
from 图书 s,作者 z
where s.作者编号=z.作者编号
and z.年龄<(select avg(年龄) from 作者);

--华为.jpg
select * from student order by ssex;
select * from score where degree between 80 and 100;

--2.png
select count(*) from table1 t1,table2 t2 where t1.学生id=t2.学生id

select  t2.家庭住址信息 from table1 t1,table2 t2 where t1.学生id=t2.学生id
and t1.姓名 like '张%' 
and t1.性别='女'
order by t1.姓名;

--4.png
select xm,zkzh from tb_student where score>0 and score<5;
select * from tb_student where xm='张三' and score=5;

select c.成绩表  from  学生表 s,成绩表 c
where s.准考证号=c.准考证号
and s.年龄 between 20 and 35
order by s.准考证号 desc;


========================================================================================
mongodb
1.mongodb的安装
os： 操作系统
	  x64     		64位操作系统
	  i386 i686 	32位操作系统
安装：傻瓜安装
	注意:compass工具不要安装
2.mongodb的服务
	mongod 	mongodb的主服务
	mongo   mongodb的客户端服务
	27017   mongodb的端口
	检查系统进程
		win+r---tasklist |  find "mongod"
	检查mongodb端口
		win+r---netstat -an | find "27017"
3.mongodb的启动
	mongod --dbpath d:\data
	mongod --dbpath d:\data --logpath d:\data\mongo.log
	--dbpath    数据文件存放的路径(文件夹)
	--logpath   日志文件的存放位置(文件)
	--fork      后台运行
4.mongodb的登录
	命令提示符:win+r--cmd
	mongo
		登录本地test数据库
	mongo 127.0.0.1/admin
		登录IP为127.0.0.1的admin数据库
	mongo 127.0.0.1:27017/admin
		登录IP为127.0.0.1端口为27017的admin数据库
	补充：设置环境变量
	计算机--属性--高级--环境变量--系统变量--Path中添加
	;C:\Program Files\MongoDB\Server\4.0\bin
	确定--确定--确定
5.mongodb的基础命令
	mysql      mongodb
	数据库     数据库
	表         集合
	数据       文档
	db
		查看当前数据库的名字
	show databases
	show dbs
		查看当前有哪些数据库的名字
	use  local
		设置当前数据库为local
	show tables
	show collections
		查看当前数据库中有哪些集合
	db.startup_log.find()
		查看startup_log集合的所有文档
6.CURD(增删改查)
	文档的新增
		db.xiyouji.insert({name:'8jie',age:200,jingli:'teamwork'})
	文档的查询
		db.xiyouji.find({age:18})
	文档的修改
		db.xiyouji.update({name:'5kong'},{$set:{age:1000}})
	文档的删除
		db.xiyouji.remove({name:'8jie'})
7.文档的新增
	新增普通文档
		 db.xiyouji.insert({name:'tangsir'})
	新增文档指定_id
		db.xiyouji.insert({_id:0,name:'shasir'})
	新增内嵌文档
		db.xiyouji.insert({name:'5kong',jingli:{kill:100,hit:2}})
	新增多个文档
		db.xiyouji.insert([{name:'niumo'},{name:'tiantian'},{name:'redhair'}])
8.文档的删除
	删除所有文档
		db.xiyouji.remove({})
	删除指定文档
		db.xiyouji.remove({age:1000})


9.文档的修改
	文档的替换
		db.xiyouji.update({age:100},{age:1000000})
	文档的修改
		db.xiyouji.update({name:'shasir'},{$set:{age:911}})
	重命名
		 db.xiyouji.update({name:'shasir'},{$rename:{'age':'nianling'}})
	列增长
		db.xiyouji.update({name:'shasir'},{$inc:{nianling:-20}})
	修改多行
		db.xiyouji.update({name:'8jie'},{$set:{age:911}},{multi:true})

10.文档的查询
	查询所有文档
		db.xiyouji.find()
	查询指定文档
		db.xiyouji.find({name:'8jie'})
	查询指定文档的指定属性
		db.xiyouji.find({name:'8jie'},{_id:0})
11.查询表达式
	比较：
		$gt  	大于
		$gte	大于等于
		$lt 	小于   
		$lte	小于等于
		$ne     不等于
	db.xiyouji.find({age:{$gt:100}})
	db.xiyouji.find({age:{$lte:100}})
	关系：
		$and    同时满足
		$or     满足一个即可
	db.xiyouji.find({$and:[{age:{$lte:1000}},{name:'8jie'}]})
	db.xiyouji.find({$and:[{age:{$lte:1000}},{name:'8jie'}]})
	存在性
		$exists 是否存在
	db.xiyouji.find({name:{$exists:1}})
	数据类型判断
		$type
		数字  	1
		字符串	2
		对象    3
		数组    4
		二进制  5
		对象id  7
		布尔    8
		date    9
		null    10
	db.xiyouji.find({age:{$type:1}})












