1.简单查询
比较
	> < = >= <= !=
关系
	and or not
区间
	between and
模糊
	like
	_
	%
空值
	is null
	is not null
in
2.多表查询
语法：select 列 from 表1，表2 where 表1.列=表2.列;
      select 列 from 表1 inner join 表2 on 表1.列=表2.列;
      select  d.老师名字 from a,b,c,d
      where a.b=b.b
      and   b.c=c.c
      and   c.d=d.d
      and   a.学生名字='张三';
      select  d.老师名字 from a inner join b on a.b=b.b
      inner join c on b.c=c.c 
      inner join d on c.d=d.d
      where a.学生名字='张三';
 ========================================
左联查询、右联查询
都是基于内联查询
create table a(
	a   int
);

create table b(
	a   int,
	b   char(10)
);

insert into a values(1),(2),(3);
insert into b values(1,'a'),(2,'b'),(4,'d');
左联查询 
左表中所有数据都存在
左联查询结果=内联查询结果+左表中有，右表中没有，对应右表中位置为空
select 列 from 左表 left join 右表 on 左表.列=右表.列;
select * from a,b where a.a=b.a;
select * from a left join b on a.a=b.a;

右联查询
右表中所有数据都存在，可以和左联查询互换
select 列 from 左表 right join 右表 on 左表.列=右表.列;
select * from a right join b on a.a=b.a;

====================================================
https://dev.mysql.com/doc/index-other.html
1.导入sakila数据库到mysql中
a.解压sakila的压缩包
b.进入到sakila解压所在文件夹
c.打开命令提示符
d.登录mysql数据库
e.导入sakila-schema.sql
	source sakila-schema.sql;
f.导入sakila-data.sql
	source sakila-data.sql;
g.检查是否导入成功
	show databases;
	use sakila;
	show tables;
	select * from city;



国家名称为china的城市名称有哪些？
1.分析列
国家名称
城市名称
2.分析表
country   country
city      city
3.关联
select * from country co,city c
where co.country_id=c.country_id;
4.过滤
select c.city from country co,city c
where co.country_id=c.country_id
and co.country='China';

--2.查询国家名称是China的所属地区有哪些？
1.分析列
国家名称
所属地区
2.分析表
conutry
address
city
3.关联
select * from country co,city c,address a
where c.country_id=co.country_id
and c.city_id=a.city_id;
4.过滤
select a.district from country co,city c,address a
where c.country_id=co.country_id
and c.city_id=a.city_id
and co.country='China';

3.查询国家名称是China的并且客户名字以J开头的客户名字
1.分析列
国家名称
客户名字
2.分析表
country
city
address
customer
3.关联
select * from country co,city c,address a,customer cu
where c.country_id=co.country_id
and   a.city_id=c.city_id
and   a.address_id=cu.address_id;
4.过滤
select cu.first_name from country co,city c,address a,customer cu
where c.country_id=co.country_id
and   a.city_id=c.city_id
and   a.address_id=cu.address_id
and   co.country='China'
and   cu.first_name like 'J%';



子查询
一条SQL语句的执行依赖于另外一条SQL语句的执行结果
子查询可以应用在新增修改删除中
查询国家名称是China的城市名称有哪些？

查询国家表中满足条件的country_id
select country_id from country where country='China';

查询城市表中country_id为上面查询出来结果的城市名称
select city from city where country_id=(select country_id from country where country='China');

--2.jpg
3.
insert into achievement values((select id from student where name='Robert'),80);
4.
update achievement set mark=87 where id=(select id from student where name='Rose');
5.
delete from achievement where id=(select id from student where name='Betty');
delete from student where name='Betty';

子查询通过子句查询出来结果分为单行子查询，多行子查询
单行子查询，查询出来结果是1个，可以用in，也可以用=
多行子查询，查询出来结果是多个，只能用in
查询城市名称以S开头的国家有哪些？

查询城市表中满足条件的country_id
select country_id from city where city like 'S%';

查询国家表中country_id为上面查询出来结果的国家名称
select country from country where country_id in (select country_id from city where city like 'S%');

通过子查询解决以下问题
--1.查询国家名称为China的城市名称有哪些？
--2.查询国家名称是China的所属地区有哪些？
--3.查询国家名称是China的并且客户名字以J开头的客户信息

--2.查询国家名称是China的所属地区有哪些？

查询国家表中满足条件的country_id
select country_id from country where country='China';

查询城市表中country_id为上面查询出来结果的city_id
select city_id from city where country_id in (select country_id from country where country='China');

查询地址表中city_id为上面查询出来结果的district
select district from address where city_id in (select city_id from city where country_id in (select country_id from country where country='China'));

--3.查询国家名称是China的并且客户名字以J开头的客户信息

查询国家表中满足条件的country_id
select country_id from country where country='China'; 

查询城市表中country_id为上面查询出来结果的city_id
select city_id from city where country_id in (select country_id from country where country='China');

查询地址表中city_id为上面查询出来结果的address_id
select address_id from address where city_id in (select city_id from city where country_id in (select country_id from country where country='China'));

查询客户表中address_id为上面查询出来结果的满足条件的客户名字
select first_name from customer where address_id in (select address_id from address where city_id in (select city_id from city where country_id in (select country_id from country where country='China'))) and first_name like 'J%';


--3.jpg
a.  
select * from dt_pay where salary>(select avg(salary) from dt_pay);
b.
select * from dt_pay;
c.
truncate table dt_pay;

--7.jpg
a.
查询c表中满足条件的c#
select c# from c where cn='税收基础';
查询sc表中c#为上面查询出来结果的s#
select s# from sc where c# in (select c# from s where cn='税收基础');
查询s表中s#为上面查询结果的学号，姓名
select s#,sn from s where s#　in (select s# from sc where c# in (select c# from s where cn='税收基础'));
b.
查询sc表中满足条件的s#
select s# from sc where c#='C2';
查询s表中满足s#为上面查询出来结果的姓名，单位
select sn,sd from s where s# in (select s# from sc where c#='C2');
c.
select sn,sd from s where s# in (select s# from sc where c#!='C5');


分组查询
分组函数
max		最大
min     最小
avg     平均
sum     求和
count   计数
分组函数通常和分组一起使用，但是也可以单独使用
查询city表中最大city_id，最小city_id
select max(city_id),min(city_id) from city;
分组查询
按照某种属性进行分类
语法：select 列 from 表 
		where 条件
			group by 分组条件
				having 分组后过滤条件;

select city_id from city group by city_id;   yes
select city_id ,country_id from city group by country_id; no
select * from city group by city_id; no
例子：
查询city表中每个country_id对应多少个城市
select count(city) from city group by country_id;
查询每个国家有多少个城市，要求显示国家名称，城市数量
select  co.country,count(c.city)  from city c,country co
where c.country_id=co.country_id
group by co.country;

having	分组后过滤，后面可以直接跟分组函数
where   分组前过滤，后面不能直接跟分组函数

例子：查询城市数量超过30的国家名称
select  co.country,count(c.city)  from city c,country co
where c.country_id=co.country_id
group by co.country
having count(c.city)>30;

注意：分组分为单分组，双分组，多分组
group by 列1，列2
先按照列1进行分组，再按照列2进行分组

查询每个城市有多少个街区

查询每个城市有多少客户


































