字典操作
1.字典的应用场景
2.创建字典
3.访问字典
4.修改字典
5.删除字典
6.补充

1.字典的应用场景
	1.前后端数据传输
	2.浏览器提交数据给服务器
	3.接口开发

2.创建字典
	字典是python中的映射数据类型
	由键值对组成  name:'gaga'
	一般是数字或者字符串作为键
	dic={'name':'gaga','QQ':110}
	dic2={'age':19}

3.访问字典
dic={'name':'gaga','QQ':110}
dic2={'age':19}

print(dic)
print(dic['name'])
print(dic['QQ'])

4.修改字典
dic={'name':'gaga','QQ':110}
print(dic)
dic['name']='simida'
print(dic)
dic['QQ']=500
print(dic)

5.删除字典
a.del()
可以删除指定元素(键值对)
可以删除整个字典(无法访问)
dic={'name':'gaga','QQ':110}
print(dic)
del dic['name']
print(dic)
del dic
#print(dic)
b.clear()
清空字典，清空后仍然可以访问
dic={'name':'gaga','QQ':110}
dic.clear()
print(dic)

6.补充
1.键keys
2.值values
3.键值对items

#keys
dic={'name':'gaga','QQ':110}
print(dic.keys())
for i in dic.keys():
    print(i)

#values
dic={'name':'gaga','QQ':110}
print(dic.values())
for i in dic.values():
    print(i)


#items
dic={'name':'gaga','QQ':110}
print(dic.items())
for i,j in dic.items():
    print(str(i)+':'+str(j))


练习
1.设计一个登陆的程序，不同的用户名和对应密码存在一个字典里面，输入正确的用户名和密码去登陆，
2.首先输入用户名，如果用户名不存在或者为空，则一直提示输入正确的用户名
3.当用户名正确的时候，提示去输入密码，如果密码跟用户名不对应，则提示密码错误请重新输入。
4.如果密码输入错误超过三次，中断程序运行。
5.用户名和密码都输入成功的时候，提示登陆成功！

#coding=utf-8
dic={'heygor':'123','o8ma':'456'}
while True:
    name=input('请输入您的用户名')
    if name in dic.keys():
        print('用户名输入正确')
        while True:
            passwd=input('请输入您的密码:')
            if passwd==dic[name]:
                print('您已经登录')
                break
            else:
                print('请重新输入密码')
        break
    else:
        print('您的输入有误，请重新输入')
