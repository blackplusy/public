元组的操作
a.元组定义
b.元组和列表区别
c.创建元组
d.访问元组
e.删除元组
f.元素的索引、切片
g.补充

a.元组定义
元组和列表类似小括号中包含元素，元素之间通过逗号进行分割
(1,2,3)
('baga','souga','huaguliang')

b.元组和列表的区别
1.敏感数据传输给不确定函数，希望这个函数不修改数据，使用元组
2.处理动态数据时候，经常更新数据，使用列表
3.元组不可变，列表可变
4.元素的速度快

c.创建元组
注意：如果元组中只包含一个元素，需要在后面增加逗号
tup=(1,)
print(tup)
print(type(tup))

d.访问元组
tup=(1,2,3,4)
for i in tup:
    print(i)

e.删除元组
tup=(1,2,3,4)
del tup
print(tup)


f.元组的索引和切片
tup=(1,2,3,4)
print(tup[0])
print(tup[-3])
print(tup[2:])
print(tup[:-2])
print(tup[2:3])

g.元组的补充
len()			元组中元素个数
max()   	 	元组中元素中最大值
min()  			元组中元素中最小值
tup.index()  	元组中某个元素第一次出现位置的索引
tup.count()     元祖中某个元素出现的次数



1.使用python语言创建空元组 score，按学号顺序（由小到大）保存多个学生一门课程的
考试成绩。调用元组操作的常用函数实现以下功能：
1）创建score 元组，其中包含10 个数值（68,87,92,100,76,88,54,89,76,61）；
2）输出score 元组中第3个元素的数值；
3）输出score 元组中第1~6 个元素的值；
4）调用count()函数，查询数值76 在 score 元组中出现的次数；
5）调用index()函数，查询 score元组中成绩是满分的学生学号；
6）调用len()函数获得 score 元组中元素的个数；
7）调用list()函数将 score元组转换为lstScore 列表；
8）调用tuple()函数将 lstScore列表转换为tpScore 元组；
